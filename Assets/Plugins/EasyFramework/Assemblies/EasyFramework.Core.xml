<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EasyFramework.Core</name>
    </assembly>
    <members>
        <member name="M:EasyFramework.Core.AnimationCurveExtension.EvaluateWithRemap(UnityEngine.AnimationCurve,System.Single,System.Single)">
            <summary>
            <para>将给定的time从[0-maxTime]映射到[0-1]</para>
            <para>然后传给AnimationCurve.Evaluate</para>
            </summary>
            <param name="curve"></param>
            <param name="time"></param>
            <param name="maxTime"></param>
            <returns></returns>
        </member>
        <member name="M:EasyFramework.Core.AnimationCurveExtension.EvaluateWithRemap(UnityEngine.AnimationCurve,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            <para>将给定的time从[0-maxTime]映射到[0-1]</para>
            <para>然后传给AnimationCurve.Evaluate</para>
            <para>之后将结果从[0-1]映射到[minValue-maxValue]</para>
            <para>注意：AnimationCurve.Evaluate的结果必须在[0-1]区间</para>
            </summary>
            <param name="curve"></param>
            <param name="time"></param>
            <param name="maxTime"></param>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <returns>[minValue-maxValue]区间的数值</returns>
        </member>
        <member name="M:EasyFramework.Core.GradientExtension.EvaluateWithRemap(UnityEngine.Gradient,System.Single,System.Single)">
            <summary>
            <para>将给定的time从[0-maxTime]映射到[0-1]</para>
            <para>然后传给Gradient.Evaluate</para>
            </summary>
            <param name="gradient"></param>
            <param name="time"></param>
            <param name="maxTime"></param>
            <returns></returns>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.SetWidth(UnityEngine.Rect,System.Single)">
            <summary>Returns a Rect with the specified width.</summary>
            <param name="rect">The original Rect.</param>
            <param name="width">The desired width of the new Rect.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.SetHeight(UnityEngine.Rect,System.Single)">
            <summary>Returns a Rect with the specified height.</summary>
            <param name="rect">The original Rect.</param>
            <param name="height">The desired height of the new Rect.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.SetSize(UnityEngine.Rect,System.Single,System.Single)">
            <summary>Returns a Rect with the specified size.</summary>
            <param name="rect">The original Rect.</param>
            <param name="width">The desired width of the new Rect.</param>
            <param name="height">The desired height of the new Rect.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.SetSize(UnityEngine.Rect,System.Single)">
            <summary>Returns a Rect with the specified size.</summary>
            <param name="rect">The original Rect.</param>
            <param name="widthAndHeight">The desired width and height of the new Rect.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.SetSize(UnityEngine.Rect,UnityEngine.Vector2)">
            <summary>Returns a Rect with the specified size.</summary>
            <param name="rect">The original Rect.</param>
            <param name="size">The desired size of the new Rect.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.HorizontalPadding(UnityEngine.Rect,System.Single)">
            <summary>
            Returns a Rect that has been inserted by the specified amount on the X-axis.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="padding">The desired padding.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.HorizontalPadding(UnityEngine.Rect,System.Single,System.Single)">
            <summary>
            Returns a Rect that has been inserted by the specified amount on the X-axis.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="left">Desired padding on the left side.</param>
            <param name="right">Desired padding on the right side.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.VerticalPadding(UnityEngine.Rect,System.Single)">
            <summary>
            Returns a Rect that has been inserted by the specified amount on the Y-axis.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="padding">The desired padding.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.VerticalPadding(UnityEngine.Rect,System.Single,System.Single)">
            <summary>
            Returns a Rect that has been inserted by the specified amount on the Y-axis.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="top">The desired padding on the top.</param>
            <param name="bottom">The desired padding on the bottom.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.Padding(UnityEngine.Rect,System.Single)">
            <summary>
            Returns a Rect that has been inserted by the specified amount.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="padding">The desired padding.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.Padding(UnityEngine.Rect,System.Single,System.Single)">
            <summary>
            Returns a Rect that has been inserted by the specified amount.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="horizontal">The desired horizontal padding.</param>
            <param name="vertical">The desired vertical padding.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.Padding(UnityEngine.Rect,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Returns a Rect that has been inserted by the specified amount.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="left">The desired padding on the left.</param>
            <param name="right">The desired padding on the right.</param>
            <param name="top">The desired padding on the top.</param>
            <param name="bottom">The desired padding on the bottom.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.AlignLeft(UnityEngine.Rect,System.Single)">
            <summary>
            Returns a Rect, with the specified width, that has been aligned to the left of the original Rect.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="width">The desired width of the new Rect.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.AlignCenter(UnityEngine.Rect,System.Single)">
            <summary>
            Returns a Rect, with the specified width, that has been aligned to horizontal center of the original Rect.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="width">The desired width of the new Rect.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.AlignCenter(UnityEngine.Rect,System.Single,System.Single)">
            <summary>
            Returns a Rect, with the specified width and height in the center of the provided rect.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="width">The desired width of the new Rect.</param>
            <param name="height">The desired height of the new Rect.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.AlignRight(UnityEngine.Rect,System.Single)">
            <summary>
            Returns a Rect, with the specified width, that has been aligned to the right of the original Rect.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="width">The desired width of the new Rect.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.AlignRight(UnityEngine.Rect,System.Single,System.Boolean)">
            <summary>
            Returns a Rect, with the specified width, that has been aligned to the right of the original Rect.
            </summary>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.AlignTop(UnityEngine.Rect,System.Single)">
            <summary>
            Returns a Rect, with the specified height, that has been aligned to the top of the original Rect.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="height">The desired height of the new Rect.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.AlignMiddle(UnityEngine.Rect,System.Single)">
            <summary>
            Returns a Rect, with the specified height, that has been aligned to the vertical middle of the original Rect.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="height">The desired height of the new Rect.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.AlignBottom(UnityEngine.Rect,System.Single)">
            <summary>
            Returns a Rect, with the specified height, that has been aligned to the bottom of the original Rect.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="height">The desired height of the new Rect.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.AlignCenterX(UnityEngine.Rect,System.Single)">
            <summary>
            Returns a Rect, with the specified width, that has been aligned horizontally to the center of the original rect.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="width">The desired width of the new Rect.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.AlignCenterY(UnityEngine.Rect,System.Single)">
            <summary>
            Returns a Rect, with the specified height, that has been aligned vertically to the center of the original rect.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="height">The desired height of the new Rect.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.AlignCenterXY(UnityEngine.Rect,System.Single)">
            <summary>
            Returns a Rect, with the specified width and height, that has been aligned horizontally and vertically to the center of the original rect.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="size">The desired width and height of the new Rect.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.AlignCenterXY(UnityEngine.Rect,System.Single,System.Single)">
            <summary>
            Returns a Rect, with the specified width and height, that has been aligned horizontally and vertically to the center of the original rect.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="width">The desired width of the new Rect.</param>
            <param name="height">The desired height of the new Rect.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.Expand(UnityEngine.Rect,System.Single)">
            <summary>
            Returns a Rect that has been expanded by the specified amount.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="expand">The desired expansion.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.Expand(UnityEngine.Rect,System.Single,System.Single)">
            <summary>
            Returns a Rect that has been expanded by the specified amount.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="horizontal">The desired expansion on the X-axis.</param>
            <param name="vertical">The desired expansion on the Y-axis.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.Expand(UnityEngine.Rect,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Returns a Rect that has been expanded by the specified amount.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="left">The desired expansion on the left.</param>
            <param name="right">The desired expansion on the right.</param>
            <param name="top">The desired expansion on the top.</param>
            <param name="bottom">The desired expansion on the bottom.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.Split(UnityEngine.Rect,System.Int32,System.Int32)">
            <summary>
            Splits a Rect horizontally into the specified number of sub-rects, and returns a sub-rect for the specified index.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="index">The index for the subrect. Includes 0, and excludes count.</param>
            <param name="count">The amount of subrects the Rect should be split into.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.SplitVertical(UnityEngine.Rect,System.Int32,System.Int32)">
            <summary>
            Splits a Rect vertically into the specified number of sub-rects, and returns a sub-rect for the specified index.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="index">The index for the subrect. Includes 0, and excludes count.</param>
            <param name="count">The amount of subrects the Rect should be split into.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.SplitGrid(UnityEngine.Rect,System.Single,System.Single,System.Int32)">
            <summary>
            Splits a Rect into a grid from left to right and then down.
            </summary>
            <param name="rect">The original rect.</param>
            <param name="width">The width of a grid cell.</param>
            <param name="height">The height of a grid cell.</param>
            <param name="index">The index of the grid cell.</param>
            <returns></returns>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.SplitTableGrid(UnityEngine.Rect,System.Int32,System.Single,System.Int32)">
            <summary>
            Splits a Rect into a grid from left to right and then down.
            </summary>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.SetCenterX(UnityEngine.Rect,System.Single)">
            <summary>Moves a Rect to the specified center X position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="x">The desired center x position.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.SetCenterY(UnityEngine.Rect,System.Single)">
            <summary>Moves a Rect to the specified center Y position.</summary>
            <param name="rect">The desired original Rect.</param>
            <param name="y">The desired desired center y position.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.SetCenter(UnityEngine.Rect,System.Single,System.Single)">
            <summary>Moves a Rect to the specified center position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="x">The desired center X position.</param>
            <param name="y">The desired center Y position.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.SetCenter(UnityEngine.Rect,UnityEngine.Vector2)">
            <summary>Moves a Rect to the specified center position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="center">The desired center position.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.SetPosition(UnityEngine.Rect,UnityEngine.Vector2)">
            <summary>Moves a Rect to the specified position.</summary>
            <param name="rect">The orignal Rect.</param>
            <param name="position">The desired position.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.ResetPosition(UnityEngine.Rect)">
            <summary>Resets a Rect's position to zero.</summary>
            <param name="rect">The original Rect.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.AddPosition(UnityEngine.Rect,UnityEngine.Vector2)">
            <summary>Moves a Rect's position by the specified amount.</summary>
            <param name="rect">The original Rect.</param>
            <param name="move">The change in position.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.AddPosition(UnityEngine.Rect,System.Single,System.Single)">
            <summary>Moves a Rect's position by the specified amount.</summary>
            <param name="rect">The original Rect.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.SetX(UnityEngine.Rect,System.Single)">
            <summary>Sets a Rect's X position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="x">The desired X position.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.AddX(UnityEngine.Rect,System.Single)">
            <summary>Adds to a Rect's X position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="x">The value to add.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.SubX(UnityEngine.Rect,System.Single)">
            <summary>Subtracts from a Rect's X position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="x">The value to subtract.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.SetY(UnityEngine.Rect,System.Single)">
            <summary>Sets a Rect's Y position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="y">The desired Y position.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.AddY(UnityEngine.Rect,System.Single)">
            <summary>Adds to a Rect's Y position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="y">The value to add.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.SubY(UnityEngine.Rect,System.Single)">
            <summary>Subtracts a Rect's Y position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="y">The value to subtract.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.SetMin(UnityEngine.Rect,UnityEngine.Vector2)">
            <summary>Sets the min position of a Rect.</summary>
            <param name="rect">The original Rect.</param>
            <param name="min">The desired min position.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.AddMin(UnityEngine.Rect,UnityEngine.Vector2)">
            <summary>Adds to a Rect's min position.</summary>
            <param name="rect">The original rect.</param>
            <param name="value">The value to add.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.SubMin(UnityEngine.Rect,UnityEngine.Vector2)">
            <summary>Subtracts a Rect's min position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="value">The vlaue to subtract.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.SetMax(UnityEngine.Rect,UnityEngine.Vector2)">
            <summary>Sets a Rect's max position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="max">The desired max position.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.AddMax(UnityEngine.Rect,UnityEngine.Vector2)">
            <summary>Adds to a Rect's max position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="value">The value to add.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.SubMax(UnityEngine.Rect,UnityEngine.Vector2)">
            <summary>Subtracts a Rect's max position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="value">The value to add.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.SetXMin(UnityEngine.Rect,System.Single)">
            <summary>Sets a Rect's X min position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="xMin">The desired min X position.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.AddXMin(UnityEngine.Rect,System.Single)">
            <summary>Adds to a Rect's X min position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="value">The value to add.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.SubXMin(UnityEngine.Rect,System.Single)">
            <summary>Subtracts from a Rect's X min position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="value">The value to subtract.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.SetXMax(UnityEngine.Rect,System.Single)">
            <summary>Sets a Rect's X max position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="xMax">The desired X max position.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.AddXMax(UnityEngine.Rect,System.Single)">
            <summary>Adds to a Rect's X max position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="value">The value to add.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.SubXMax(UnityEngine.Rect,System.Single)">
            <summary>Subtracts a Rect's X max position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="value">The value to subtract.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.SetYMin(UnityEngine.Rect,System.Single)">
            <summary>Sets a Rect's Y min position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="yMin">The desired Y min.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.AddYMin(UnityEngine.Rect,System.Single)">
            <summary>Adds to a Rect's Y min position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="value">The value to add.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.SubYMin(UnityEngine.Rect,System.Single)">
            <summary>Subtracts a Rect's Y min position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="value">The value to subtract.</param>
            <returns></returns>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.SetYMax(UnityEngine.Rect,System.Single)">
            <summary>Sets a Rect's Y max position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="yMax">The desired Y max position.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.AddYMax(UnityEngine.Rect,System.Single)">
            <summary>Adds to a Rect's Y max position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="value">The value to add.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.SubYMax(UnityEngine.Rect,System.Single)">
            <summary>Subtracts from a Rect's Y max position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="value">The value to subtract.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.MinWidth(UnityEngine.Rect,System.Single)">
            <summary>
            Sets a Rect's width, if it is less than the specified value.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="minWidth">The desired min width.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.MaxWidth(UnityEngine.Rect,System.Single)">
            <summary>
            Sets a Rect's width, if it is greater than the specified value.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="maxWidth">The desired max width.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.MinHeight(UnityEngine.Rect,System.Single)">
            <summary>
            Sets a Rect's height, if it is less than the specified value.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="minHeight">The desired min height.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.MaxHeight(UnityEngine.Rect,System.Single)">
            <summary>
            Sets a Rect's height, if it is greater than the specified value.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="maxHeight">The desired max height.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.ExpandTo(UnityEngine.Rect,UnityEngine.Vector2)">
            <summary>Expands a rect to contain a given position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="pos">The position to expand the rect towards.</param>
        </member>
        <member name="M:EasyFramework.Core.RectExtension.IsPlaceholder(UnityEngine.Rect)">
            <summary>
            Determines if an <see cref="T:UnityEngine.Rect" /> is a placeholder; usually (0, 0, 1, 1) in Layout.
            </summary>
            <param name="rect">The original <see cref="T:UnityEngine.Rect" />.</param>
            <returns><c>true</c> if the <see cref="T:UnityEngine.Rect" /> is equal to (0, 0, 0, 0) or (0, 0, 1, 1); otherwise <c>false</c>.</returns>
        </member>
        <member name="M:EasyFramework.Core.IFromRegisterEvent.InUnityThread">
            <summary>
            <para>确保会在Unity线程触发</para>
            </summary>
        </member>
        <member name="T:EasyFramework.Core.EasyEventHandler`1">
            <summary>
            事件处理器
            </summary>
            <typeparam name="TEvent"></typeparam>
            <param name="sender">发送者</param>
            <param name="e">事件参数</param>
        </member>
        <member name="T:EasyFramework.Core.EventTriggerWrapper">
            <summary>
            <para>事件处理器的触发行为扩展</para>
            <para>可以使用该委托实现例如：确保在UI线程调用事件处理器</para>
            </summary>
            <param name="triggerInvoker">事件处理器的触发调用对象</param>
        </member>
        <member name="T:EasyFramework.Core.EasyEventHandlerAttribute">
            <summary>
            <para>标记为事件处理器</para>
            <para>事件处理器必须为2个参数，第一个参数是发送者（推荐直接object），第二个参数是事件类型</para>
            <para>当RegisterEasyEventSubscriber时会使用该特性</para>
            </summary>
        </member>
        <member name="M:EasyFramework.Core.EasyEventManager.RegisterSubscriber(System.Object)">
            <summary>
            注册target中所有事件处理器（标记了EasyEventHandler特性的成员函数）
            </summary>
            <param name="target"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:EasyFramework.Core.EasyEventManager.Register``1(System.Object,EasyFramework.Core.EasyEventHandler{``0})">
            <summary>
            注册事件处理器
            </summary>
            <typeparam name="TEvent"></typeparam>
            <param name="target"></param>
            <param name="handler"></param>
        </member>
        <member name="M:EasyFramework.Core.EasyEventManager.UnregisterSubscriber(System.Object,System.Boolean)">
            <summary>
            取消注册target中所有事件处理器
            </summary>
            <param name="target"></param>
            <param name="includeBaseClass">包含基类的事件处理器</param>
            <returns></returns>
        </member>
        <member name="M:EasyFramework.Core.EasyEventManager.Unregister``1(System.Object,EasyFramework.Core.EasyEventHandler{``0})">
            <summary>
            取消注册事件处理器
            </summary>
            <typeparam name="TEvent"></typeparam>
            <param name="target"></param>
            <param name="handler"></param>
            <returns></returns>
        </member>
        <member name="M:EasyFramework.Core.EasyEventManager.SendEvent``1(System.Object,``0)">
            <summary>
            <para>触发事件</para>
            <para>注意：在事件处理器中触发事件要谨慎，处理不当可能会死锁</para>
            <para>如果出现死锁了，检查以下情况</para>
            <para>1、是否事件处理器中再次触发处理的事件（包括整个触发栈）</para>
            <para>2、待补充。。。。。。</para>
            </summary>
            <typeparam name="TEvent"></typeparam>
            <param name="target"></param>
            <param name="eventArg">事件</param>
            <returns></returns>
        </member>
        <member name="T:EasyFramework.Core.StateChangedHandler`1">
            <summary>
            当状态更改完成的回调
            </summary>
            <typeparam name="T"></typeparam>
            <param name="stateId">当前状态</param>
        </member>
        <member name="E:EasyFramework.Core.StateMachine`1.OnStateChanged">
            <summary>
            当状态更改完的的回调
            </summary>
        </member>
        <member name="M:EasyFramework.Core.MathUtility.Remap(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            将一个在[A, B]区间的x, 映射到[C, D]区间
            </summary>
            <returns></returns>
        </member>
        <member name="M:EasyFramework.Core.MathUtility.GetVerticesOfRotatedRectangle(UnityEngine.Rect,System.Single)">
            <summary>
            获取旋转后矩形的四个顶点
            </summary>
            <returns>[左下角, 左上角, 右上角, 右下角]</returns>
        </member>
        <member name="M:EasyFramework.Core.MathUtility.GetVerticesOfRotatedRectangle(UnityEngine.Vector2,UnityEngine.Vector2,System.Single)">
            <summary>
            获取旋转后矩形的四个顶点
            </summary>
            <returns>[左下角, 左上角, 右上角, 右下角]</returns>
        </member>
    </members>
</doc>
