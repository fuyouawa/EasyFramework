<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EasyFramework</name>
    </assembly>
    <members>
        <member name="F:EasyFramework.BigTitleCNAttribute.Title">
            <summary>
            The title displayed above the property in the inspector.
            </summary>
        </member>
        <member name="F:EasyFramework.BigTitleCNAttribute.Subtitle">
            <summary>
            Optional subtitle.
            </summary>
        </member>
        <member name="F:EasyFramework.BigTitleCNAttribute.Bold">
            <summary>
            If <c>true</c> the title will be displayed with a bold font.
            </summary>
        </member>
        <member name="F:EasyFramework.BigTitleCNAttribute.HorizontalLine">
            <summary>
            Gets a value indicating whether or not to draw a horizontal line below the title.
            </summary>
        </member>
        <member name="F:EasyFramework.BigTitleCNAttribute.TitleAlignment">
            <summary>
            Title alignment.
            </summary>
        </member>
        <member name="M:EasyFramework.BigTitleCNAttribute.#ctor(System.String,System.String,Sirenix.OdinInspector.TitleAlignments,System.Boolean,System.Boolean)">
            <summary>
            Creates a title above any property in the inspector.
            </summary>
            <param name="title">The title displayed above the property in the inspector.</param>
            <param name="subtitle">Optional subtitle</param>
            <param name="titleAlignment">Title alignment</param>
            <param name="horizontalLine">Horizontal line</param>
            <param name="bold">If <c>true</c> the title will be drawn with a bold font.</param>
        </member>
        <member name="F:EasyFramework.BigTitleGroupCNAttribute.Subtitle">
            <summary>
            Optional subtitle.
            </summary>
        </member>
        <member name="F:EasyFramework.BigTitleGroupCNAttribute.Alignment">
            <summary>
            Title alignment.
            </summary>
        </member>
        <member name="F:EasyFramework.BigTitleGroupCNAttribute.HorizontalLine">
            <summary>
            Gets a value indicating whether or not to draw a horizontal line below the title.
            </summary>
        </member>
        <member name="F:EasyFramework.BigTitleGroupCNAttribute.BoldTitle">
            <summary>
            If <c>true</c> the title will be displayed with a bold font.
            </summary>
        </member>
        <member name="F:EasyFramework.BigTitleGroupCNAttribute.Indent">
            <summary>
            Gets a value indicating whether or not to indent all group members.
            </summary>
        </member>
        <member name="M:EasyFramework.BigTitleGroupCNAttribute.#ctor(System.String,System.String,Sirenix.OdinInspector.TitleAlignments,System.Boolean,System.Boolean,System.Boolean,System.Single)">
            <summary>
            Groups properties vertically together with a title, an optional subtitle, and an optional horizontal line. 
            </summary>
            <param name="title">The title-</param>
            <param name="subtitle">Optional subtitle.</param>
            <param name="alignment">The text alignment.</param>
            <param name="horizontalLine">Horizontal line.</param>
            <param name="boldTitle">Bold text.</param>
            <param name="indent">Whether or not to indent all group members.</param>
            <param name="order">The group order.</param>
        </member>
        <member name="M:EasyFramework.BigTitleGroupCNAttribute.CombineValuesWith(Sirenix.OdinInspector.PropertyGroupAttribute)">
            <summary>
            Combines TitleGroup attributes.
            </summary>
            <param name="other">The other group attribute to combine with.</param>
        </member>
        <member name="T:EasyFramework.InfoBoxCNAttribute">
            <summary>
            扩展自Sirenix.OdinInspector.InfoBoxAttribute
            优化中文字体的显示
            使用方法和Sirenix.OdinInspector.InfoBoxAttribute一样
            </summary>
        </member>
        <member name="F:EasyFramework.InfoBoxCNAttribute.Message">
            <summary>
            The message to display in the info box.
            </summary>
        </member>
        <member name="F:EasyFramework.InfoBoxCNAttribute.InfoMessageType">
            <summary>
            The type of the message box.
            </summary>
        </member>
        <member name="F:EasyFramework.InfoBoxCNAttribute.VisibleIf">
            <summary>
            Optional member field, property or function to show and hide the info box.
            </summary>
        </member>
        <member name="F:EasyFramework.InfoBoxCNAttribute.GUIAlwaysEnabled">
            <summary>
            When <c>true</c> the InfoBox will ignore the GUI.enable flag and always draw as enabled.
            </summary>
        </member>
        <member name="F:EasyFramework.InfoBoxCNAttribute.IconColor">
            <summary>Supports a variety of color formats, including named colors (e.g. "red", "orange", "green", "blue"), hex codes (e.g. "#FF0000" and "#FF0000FF"), and RGBA (e.g. "RGBA(1,1,1,1)") or RGB (e.g. "RGB(1,1,1)"), including Odin attribute expressions (e.g "@this.MyColor"). Here are the available named colors: black, blue, clear, cyan, gray, green, grey, magenta, orange, purple, red, transparent, transparentBlack, transparentWhite, white, yellow, lightblue, lightcyan, lightgray, lightgreen, lightgrey, lightmagenta, lightorange, lightpurple, lightred, lightyellow, darkblue, darkcyan, darkgray, darkgreen, darkgrey, darkmagenta, darkorange, darkpurple, darkred, darkyellow.</summary>
        </member>
        <member name="P:EasyFramework.InfoBoxCNAttribute.Icon">
            <summary>
            The icon to be displayed next to the message.
            </summary>
        </member>
        <member name="M:EasyFramework.InfoBoxCNAttribute.#ctor(System.String,Sirenix.OdinInspector.InfoMessageType,System.String)">
            <summary>
            Displays an info box above the property.
            </summary>
            <param name="message">The message for the message box. Supports referencing a member string field, property or method by using $.</param>
            <param name="infoMessageType">The type of the message box.</param>
            <param name="visibleIfMemberName">Name of member bool to show or hide the message box.</param>
        </member>
        <member name="M:EasyFramework.InfoBoxCNAttribute.#ctor(System.String,System.String)">
            <summary>
            Displays an info box above the property.
            </summary>
            <param name="message">The message for the message box. Supports referencing a member string field, property or method by using $.</param>
            <param name="visibleIfMemberName">Name of member bool to show or hide the message box.</param>
        </member>
        <member name="M:EasyFramework.InfoBoxCNAttribute.#ctor(System.String,Sirenix.OdinInspector.SdfIconType,System.String)">
            <summary>
            Displays an info box above the property.
            </summary>
            <param name="message">The message for the message box. Supports referencing a member string field, property or method by using $.</param>
            <param name="icon">The icon to be displayed next to the message.</param>
            <param name="visibleIfMemberName">Name of member bool to show or hide the message box.</param>
        </member>
        <member name="F:EasyFramework.TitleCNAttribute.Title">
            <summary>
            The title displayed above the property in the inspector.
            </summary>
        </member>
        <member name="F:EasyFramework.TitleCNAttribute.Subtitle">
            <summary>
            Optional subtitle.
            </summary>
        </member>
        <member name="F:EasyFramework.TitleCNAttribute.Bold">
            <summary>
            If <c>true</c> the title will be displayed with a bold font.
            </summary>
        </member>
        <member name="F:EasyFramework.TitleCNAttribute.HorizontalLine">
            <summary>
            Gets a value indicating whether or not to draw a horizontal line below the title.
            </summary>
        </member>
        <member name="F:EasyFramework.TitleCNAttribute.TitleAlignment">
            <summary>
            Title alignment.
            </summary>
        </member>
        <member name="M:EasyFramework.TitleCNAttribute.#ctor(System.String,System.String,Sirenix.OdinInspector.TitleAlignments,System.Boolean,System.Boolean)">
            <summary>
            Creates a title above any property in the inspector.
            </summary>
            <param name="title">The title displayed above the property in the inspector.</param>
            <param name="subtitle">Optional subtitle</param>
            <param name="titleAlignment">Title alignment</param>
            <param name="horizontalLine">Horizontal line</param>
            <param name="bold">If <c>true</c> the title will be drawn with a bold font.</param>
        </member>
        <member name="F:EasyFramework.TitleGroupCNAttribute.Subtitle">
            <summary>
            Optional subtitle.
            </summary>
        </member>
        <member name="F:EasyFramework.TitleGroupCNAttribute.Alignment">
            <summary>
            Title alignment.
            </summary>
        </member>
        <member name="F:EasyFramework.TitleGroupCNAttribute.HorizontalLine">
            <summary>
            Gets a value indicating whether or not to draw a horizontal line below the title.
            </summary>
        </member>
        <member name="F:EasyFramework.TitleGroupCNAttribute.BoldTitle">
            <summary>
            If <c>true</c> the title will be displayed with a bold font.
            </summary>
        </member>
        <member name="F:EasyFramework.TitleGroupCNAttribute.Indent">
            <summary>
            Gets a value indicating whether or not to indent all group members.
            </summary>
        </member>
        <member name="M:EasyFramework.TitleGroupCNAttribute.#ctor(System.String,System.String,Sirenix.OdinInspector.TitleAlignments,System.Boolean,System.Boolean,System.Boolean,System.Single)">
            <summary>
            Groups properties vertically together with a title, an optional subtitle, and an optional horizontal line. 
            </summary>
            <param name="title">The title-</param>
            <param name="subtitle">Optional subtitle.</param>
            <param name="alignment">The text alignment.</param>
            <param name="horizontalLine">Horizontal line.</param>
            <param name="boldTitle">Bold text.</param>
            <param name="indent">Whether or not to indent all group members.</param>
            <param name="order">The group order.</param>
        </member>
        <member name="M:EasyFramework.TitleGroupCNAttribute.CombineValuesWith(Sirenix.OdinInspector.PropertyGroupAttribute)">
            <summary>
            Combines TitleGroup attributes.
            </summary>
            <param name="other">The other group attribute to combine with.</param>
        </member>
        <member name="M:EasyFramework.AnimationCurveExtension.EvaluateWithRemap(UnityEngine.AnimationCurve,System.Single,System.Single)">
            <summary>
            <para>将给定的time从[0-maxTime]映射到[0-1]</para>
            <para>然后传给AnimationCurve.Evaluate</para>
            </summary>
            <param name="curve"></param>
            <param name="time"></param>
            <param name="maxTime"></param>
            <returns></returns>
        </member>
        <member name="M:EasyFramework.AnimationCurveExtension.EvaluateWithRemap(UnityEngine.AnimationCurve,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            <para>将给定的time从[0-maxTime]映射到[0-1]</para>
            <para>然后传给AnimationCurve.Evaluate</para>
            <para>之后将结果从[0-1]映射到[minValue-maxValue]</para>
            <para>注意：AnimationCurve.Evaluate的结果必须在[0-1]区间</para>
            </summary>
            <param name="curve"></param>
            <param name="time"></param>
            <param name="maxTime"></param>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <returns>[minValue-maxValue]区间的数值</returns>
        </member>
        <member name="M:EasyFramework.GradientExtension.EvaluateWithRemap(UnityEngine.Gradient,System.Single,System.Single)">
            <summary>
            <para>将给定的time从[0-maxTime]映射到[0-1]</para>
            <para>然后传给Gradient.Evaluate</para>
            </summary>
            <param name="gradient"></param>
            <param name="time"></param>
            <param name="maxTime"></param>
            <returns></returns>
        </member>
        <member name="M:EasyFramework.RectExtension.SetWidth(UnityEngine.Rect,System.Single)">
            <summary>Returns a Rect with the specified width.</summary>
            <param name="rect">The original Rect.</param>
            <param name="width">The desired width of the new Rect.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.SetHeight(UnityEngine.Rect,System.Single)">
            <summary>Returns a Rect with the specified height.</summary>
            <param name="rect">The original Rect.</param>
            <param name="height">The desired height of the new Rect.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.SetSize(UnityEngine.Rect,System.Single,System.Single)">
            <summary>Returns a Rect with the specified size.</summary>
            <param name="rect">The original Rect.</param>
            <param name="width">The desired width of the new Rect.</param>
            <param name="height">The desired height of the new Rect.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.SetSize(UnityEngine.Rect,System.Single)">
            <summary>Returns a Rect with the specified size.</summary>
            <param name="rect">The original Rect.</param>
            <param name="widthAndHeight">The desired width and height of the new Rect.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.SetSize(UnityEngine.Rect,UnityEngine.Vector2)">
            <summary>Returns a Rect with the specified size.</summary>
            <param name="rect">The original Rect.</param>
            <param name="size">The desired size of the new Rect.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.HorizontalPadding(UnityEngine.Rect,System.Single)">
            <summary>
            Returns a Rect that has been inserted by the specified amount on the X-axis.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="padding">The desired padding.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.HorizontalPadding(UnityEngine.Rect,System.Single,System.Single)">
            <summary>
            Returns a Rect that has been inserted by the specified amount on the X-axis.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="left">Desired padding on the left side.</param>
            <param name="right">Desired padding on the right side.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.VerticalPadding(UnityEngine.Rect,System.Single)">
            <summary>
            Returns a Rect that has been inserted by the specified amount on the Y-axis.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="padding">The desired padding.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.VerticalPadding(UnityEngine.Rect,System.Single,System.Single)">
            <summary>
            Returns a Rect that has been inserted by the specified amount on the Y-axis.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="top">The desired padding on the top.</param>
            <param name="bottom">The desired padding on the bottom.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.Padding(UnityEngine.Rect,System.Single)">
            <summary>
            Returns a Rect that has been inserted by the specified amount.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="padding">The desired padding.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.Padding(UnityEngine.Rect,System.Single,System.Single)">
            <summary>
            Returns a Rect that has been inserted by the specified amount.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="horizontal">The desired horizontal padding.</param>
            <param name="vertical">The desired vertical padding.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.Padding(UnityEngine.Rect,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Returns a Rect that has been inserted by the specified amount.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="left">The desired padding on the left.</param>
            <param name="right">The desired padding on the right.</param>
            <param name="top">The desired padding on the top.</param>
            <param name="bottom">The desired padding on the bottom.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.AlignLeft(UnityEngine.Rect,System.Single)">
            <summary>
            Returns a Rect, with the specified width, that has been aligned to the left of the original Rect.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="width">The desired width of the new Rect.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.AlignCenter(UnityEngine.Rect,System.Single)">
            <summary>
            Returns a Rect, with the specified width, that has been aligned to horizontal center of the original Rect.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="width">The desired width of the new Rect.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.AlignCenter(UnityEngine.Rect,System.Single,System.Single)">
            <summary>
            Returns a Rect, with the specified width and height in the center of the provided rect.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="width">The desired width of the new Rect.</param>
            <param name="height">The desired height of the new Rect.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.AlignRight(UnityEngine.Rect,System.Single)">
            <summary>
            Returns a Rect, with the specified width, that has been aligned to the right of the original Rect.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="width">The desired width of the new Rect.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.AlignRight(UnityEngine.Rect,System.Single,System.Boolean)">
            <summary>
            Returns a Rect, with the specified width, that has been aligned to the right of the original Rect.
            </summary>
        </member>
        <member name="M:EasyFramework.RectExtension.AlignTop(UnityEngine.Rect,System.Single)">
            <summary>
            Returns a Rect, with the specified height, that has been aligned to the top of the original Rect.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="height">The desired height of the new Rect.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.AlignMiddle(UnityEngine.Rect,System.Single)">
            <summary>
            Returns a Rect, with the specified height, that has been aligned to the vertical middle of the original Rect.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="height">The desired height of the new Rect.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.AlignBottom(UnityEngine.Rect,System.Single)">
            <summary>
            Returns a Rect, with the specified height, that has been aligned to the bottom of the original Rect.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="height">The desired height of the new Rect.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.AlignCenterX(UnityEngine.Rect,System.Single)">
            <summary>
            Returns a Rect, with the specified width, that has been aligned horizontally to the center of the original rect.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="width">The desired width of the new Rect.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.AlignCenterY(UnityEngine.Rect,System.Single)">
            <summary>
            Returns a Rect, with the specified height, that has been aligned vertically to the center of the original rect.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="height">The desired height of the new Rect.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.AlignCenterXY(UnityEngine.Rect,System.Single)">
            <summary>
            Returns a Rect, with the specified width and height, that has been aligned horizontally and vertically to the center of the original rect.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="size">The desired width and height of the new Rect.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.AlignCenterXY(UnityEngine.Rect,System.Single,System.Single)">
            <summary>
            Returns a Rect, with the specified width and height, that has been aligned horizontally and vertically to the center of the original rect.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="width">The desired width of the new Rect.</param>
            <param name="height">The desired height of the new Rect.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.Expand(UnityEngine.Rect,System.Single)">
            <summary>
            Returns a Rect that has been expanded by the specified amount.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="expand">The desired expansion.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.Expand(UnityEngine.Rect,System.Single,System.Single)">
            <summary>
            Returns a Rect that has been expanded by the specified amount.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="horizontal">The desired expansion on the X-axis.</param>
            <param name="vertical">The desired expansion on the Y-axis.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.Expand(UnityEngine.Rect,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Returns a Rect that has been expanded by the specified amount.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="left">The desired expansion on the left.</param>
            <param name="right">The desired expansion on the right.</param>
            <param name="top">The desired expansion on the top.</param>
            <param name="bottom">The desired expansion on the bottom.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.Split(UnityEngine.Rect,System.Int32,System.Int32)">
            <summary>
            Splits a Rect horizontally into the specified number of sub-rects, and returns a sub-rect for the specified index.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="index">The index for the subrect. Includes 0, and excludes count.</param>
            <param name="count">The amount of subrects the Rect should be split into.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.SplitVertical(UnityEngine.Rect,System.Int32,System.Int32)">
            <summary>
            Splits a Rect vertically into the specified number of sub-rects, and returns a sub-rect for the specified index.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="index">The index for the subrect. Includes 0, and excludes count.</param>
            <param name="count">The amount of subrects the Rect should be split into.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.SplitGrid(UnityEngine.Rect,System.Single,System.Single,System.Int32)">
            <summary>
            Splits a Rect into a grid from left to right and then down.
            </summary>
            <param name="rect">The original rect.</param>
            <param name="width">The width of a grid cell.</param>
            <param name="height">The height of a grid cell.</param>
            <param name="index">The index of the grid cell.</param>
            <returns></returns>
        </member>
        <member name="M:EasyFramework.RectExtension.SplitTableGrid(UnityEngine.Rect,System.Int32,System.Single,System.Int32)">
            <summary>
            Splits a Rect into a grid from left to right and then down.
            </summary>
        </member>
        <member name="M:EasyFramework.RectExtension.SetCenterX(UnityEngine.Rect,System.Single)">
            <summary>Moves a Rect to the specified center X position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="x">The desired center x position.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.SetCenterY(UnityEngine.Rect,System.Single)">
            <summary>Moves a Rect to the specified center Y position.</summary>
            <param name="rect">The desired original Rect.</param>
            <param name="y">The desired desired center y position.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.SetCenter(UnityEngine.Rect,System.Single,System.Single)">
            <summary>Moves a Rect to the specified center position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="x">The desired center X position.</param>
            <param name="y">The desired center Y position.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.SetCenter(UnityEngine.Rect,UnityEngine.Vector2)">
            <summary>Moves a Rect to the specified center position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="center">The desired center position.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.SetPosition(UnityEngine.Rect,UnityEngine.Vector2)">
            <summary>Moves a Rect to the specified position.</summary>
            <param name="rect">The orignal Rect.</param>
            <param name="position">The desired position.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.ResetPosition(UnityEngine.Rect)">
            <summary>Resets a Rect's position to zero.</summary>
            <param name="rect">The original Rect.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.AddPosition(UnityEngine.Rect,UnityEngine.Vector2)">
            <summary>Moves a Rect's position by the specified amount.</summary>
            <param name="rect">The original Rect.</param>
            <param name="move">The change in position.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.AddPosition(UnityEngine.Rect,System.Single,System.Single)">
            <summary>Moves a Rect's position by the specified amount.</summary>
            <param name="rect">The original Rect.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.SetX(UnityEngine.Rect,System.Single)">
            <summary>Sets a Rect's X position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="x">The desired X position.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.AddX(UnityEngine.Rect,System.Single)">
            <summary>Adds to a Rect's X position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="x">The value to add.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.SubX(UnityEngine.Rect,System.Single)">
            <summary>Subtracts from a Rect's X position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="x">The value to subtract.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.SetY(UnityEngine.Rect,System.Single)">
            <summary>Sets a Rect's Y position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="y">The desired Y position.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.AddY(UnityEngine.Rect,System.Single)">
            <summary>Adds to a Rect's Y position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="y">The value to add.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.SubY(UnityEngine.Rect,System.Single)">
            <summary>Subtracts a Rect's Y position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="y">The value to subtract.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.SetMin(UnityEngine.Rect,UnityEngine.Vector2)">
            <summary>Sets the min position of a Rect.</summary>
            <param name="rect">The original Rect.</param>
            <param name="min">The desired min position.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.AddMin(UnityEngine.Rect,UnityEngine.Vector2)">
            <summary>Adds to a Rect's min position.</summary>
            <param name="rect">The original rect.</param>
            <param name="value">The value to add.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.SubMin(UnityEngine.Rect,UnityEngine.Vector2)">
            <summary>Subtracts a Rect's min position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="value">The vlaue to subtract.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.SetMax(UnityEngine.Rect,UnityEngine.Vector2)">
            <summary>Sets a Rect's max position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="max">The desired max position.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.AddMax(UnityEngine.Rect,UnityEngine.Vector2)">
            <summary>Adds to a Rect's max position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="value">The value to add.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.SubMax(UnityEngine.Rect,UnityEngine.Vector2)">
            <summary>Subtracts a Rect's max position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="value">The value to add.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.SetXMin(UnityEngine.Rect,System.Single)">
            <summary>Sets a Rect's X min position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="xMin">The desired min X position.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.AddXMin(UnityEngine.Rect,System.Single)">
            <summary>Adds to a Rect's X min position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="value">The value to add.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.SubXMin(UnityEngine.Rect,System.Single)">
            <summary>Subtracts from a Rect's X min position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="value">The value to subtract.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.SetXMax(UnityEngine.Rect,System.Single)">
            <summary>Sets a Rect's X max position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="xMax">The desired X max position.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.AddXMax(UnityEngine.Rect,System.Single)">
            <summary>Adds to a Rect's X max position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="value">The value to add.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.SubXMax(UnityEngine.Rect,System.Single)">
            <summary>Subtracts a Rect's X max position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="value">The value to subtract.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.SetYMin(UnityEngine.Rect,System.Single)">
            <summary>Sets a Rect's Y min position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="yMin">The desired Y min.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.AddYMin(UnityEngine.Rect,System.Single)">
            <summary>Adds to a Rect's Y min position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="value">The value to add.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.SubYMin(UnityEngine.Rect,System.Single)">
            <summary>Subtracts a Rect's Y min position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="value">The value to subtract.</param>
            <returns></returns>
        </member>
        <member name="M:EasyFramework.RectExtension.SetYMax(UnityEngine.Rect,System.Single)">
            <summary>Sets a Rect's Y max position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="yMax">The desired Y max position.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.AddYMax(UnityEngine.Rect,System.Single)">
            <summary>Adds to a Rect's Y max position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="value">The value to add.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.SubYMax(UnityEngine.Rect,System.Single)">
            <summary>Subtracts from a Rect's Y max position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="value">The value to subtract.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.MinWidth(UnityEngine.Rect,System.Single)">
            <summary>
            Sets a Rect's width, if it is less than the specified value.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="minWidth">The desired min width.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.MaxWidth(UnityEngine.Rect,System.Single)">
            <summary>
            Sets a Rect's width, if it is greater than the specified value.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="maxWidth">The desired max width.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.MinHeight(UnityEngine.Rect,System.Single)">
            <summary>
            Sets a Rect's height, if it is less than the specified value.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="minHeight">The desired min height.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.MaxHeight(UnityEngine.Rect,System.Single)">
            <summary>
            Sets a Rect's height, if it is greater than the specified value.
            </summary>
            <param name="rect">The original Rect.</param>
            <param name="maxHeight">The desired max height.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.ExpandTo(UnityEngine.Rect,UnityEngine.Vector2)">
            <summary>Expands a rect to contain a given position.</summary>
            <param name="rect">The original Rect.</param>
            <param name="pos">The position to expand the rect towards.</param>
        </member>
        <member name="M:EasyFramework.RectExtension.IsPlaceholder(UnityEngine.Rect)">
            <summary>
            Determines if an <see cref="T:UnityEngine.Rect" /> is a placeholder; usually (0, 0, 1, 1) in Layout.
            </summary>
            <param name="rect">The original <see cref="T:UnityEngine.Rect" />.</param>
            <returns><c>true</c> if the <see cref="T:UnityEngine.Rect" /> is equal to (0, 0, 0, 0) or (0, 0, 1, 1); otherwise <c>false</c>.</returns>
        </member>
        <member name="T:EasyFramework.EventTriggerExtensionDelegate">
            <summary>
            <para>事件处理器的触发行为扩展</para>
            <para>可以使用该委托实现例如：确保在UI线程调用事件处理器</para>
            </summary>
            <param name="triggerInvoker">事件处理器的触发调用对象</param>
        </member>
        <member name="T:EasyFramework.EventHandlerDelegate`1">
            <summary>
            事件处理器
            </summary>
            <typeparam name="TEvent"></typeparam>
            <param name="sender">发送者</param>
            <param name="e">事件参数</param>
        </member>
        <member name="T:EasyFramework.EasyEventHandlerAttribute">
            <summary>
            <para>标记为事件处理器</para>
            <para>事件处理器必须为2个参数，第一个参数是发送者（推荐直接object），第二个参数是事件类型</para>
            <para>当RegisterEasyEventSubscriber时会使用该特性</para>
            </summary>
        </member>
        <member name="M:EasyFramework.EventManager.RegisterSubscriber(System.Object)">
            <summary>
            注册target中所有事件处理器（标记了EasyEventHandler特性的成员函数）
            </summary>
            <param name="target"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:EasyFramework.EventManager.Register``1(System.Object,EasyFramework.EventHandlerDelegate{``0})">
            <summary>
            注册事件处理器
            </summary>
            <typeparam name="TEvent"></typeparam>
            <param name="target"></param>
            <param name="handler"></param>
        </member>
        <member name="M:EasyFramework.EventManager.UnRegisterSubscriber(System.Object,System.Boolean)">
            <summary>
            取消注册target中所有事件处理器
            </summary>
            <param name="target"></param>
            <param name="includeBaseClass">包含基类的事件处理器</param>
            <returns></returns>
        </member>
        <member name="M:EasyFramework.EventManager.UnRegister``1(System.Object,EasyFramework.EventHandlerDelegate{``0})">
            <summary>
            取消注册事件处理器
            </summary>
            <typeparam name="TEvent"></typeparam>
            <param name="target"></param>
            <param name="handler"></param>
            <returns></returns>
        </member>
        <member name="M:EasyFramework.EventManager.SendEvent``1(System.Object,``0)">
            <summary>
            <para>触发事件</para>
            <para>注意：在事件处理器中触发事件要谨慎，处理不当可能会死锁</para>
            <para>如果出现死锁了，检查以下情况</para>
            <para>1、是否事件处理器中再次触发处理的事件（包括整个触发栈）</para>
            <para>2、待补充。。。。。。</para>
            </summary>
            <typeparam name="TEvent"></typeparam>
            <param name="target"></param>
            <param name="eventArg">事件</param>
            <returns></returns>
        </member>
        <member name="M:EasyFramework.EF_Sound.PlaySound(UnityEngine.AudioClip,UnityEngine.Vector3)">
            <summary>
            Plays a sound differently based on the selected play method
            </summary>
            <param name="sfx"></param>
            <param name="position"></param>
        </member>
        <member name="M:EasyFramework.EF_Sound.PlayAudioSource(UnityEngine.AudioSource,UnityEngine.AudioClip,System.Single,System.Single,UnityEngine.Audio.AudioMixerGroup,System.Int32)">
            <summary>
            Plays the audio source with the specified volume and pitch
            </summary>
            <param name="audioSource"></param>
            <param name="sfx"></param>
            <param name="volume"></param>
            <param name="pitch"></param>
        </member>
        <member name="M:EasyFramework.EF_Sound.GetAudioSourceFromPool">
            <summary>
            Gets an audio source from the pool if possible
            </summary>
            <returns></returns>
        </member>
        <member name="M:EasyFramework.IFromEventRegister.InUnityThread">
            <summary>
            <para>注册事件处理器</para>
            <para>确保会在Unity线程触发</para>
            </summary>
        </member>
        <member name="E:EasyFramework.StateMachine`1.OnStateChange">
            <summary>
            当有状态更改时的回调
            </summary>
        </member>
        <member name="M:EasyFramework.MathUtility.Remap(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            将一个在[A, B]区间的x, 映射到[C, D]区间
            </summary>
            <returns></returns>
        </member>
        <member name="M:EasyFramework.MathUtility.GetVerticesOfRotatedRectangle(UnityEngine.Rect,System.Single)">
            <summary>
            获取旋转后矩形的四个顶点
            </summary>
            <returns>[左下角, 左上角, 右上角, 右下角]</returns>
        </member>
        <member name="M:EasyFramework.MathUtility.GetVerticesOfRotatedRectangle(UnityEngine.Vector2,UnityEngine.Vector2,System.Single)">
            <summary>
            获取旋转后矩形的四个顶点
            </summary>
            <returns>[左下角, 左上角, 右上角, 右下角]</returns>
        </member>
    </members>
</doc>
