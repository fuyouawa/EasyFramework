<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EasyFramework.Tweening</name>
    </assembly>
    <members>
        <member name="P:EasyFramework.Tweening.AbstractTween.ActualDuration">
            <summary>
            获取实际的持续时间，返回null代表无法判断具体持续时间。
            </summary>
            <returns></returns>
        </member>
        <member name="M:EasyFramework.Tweening.Ease.Linear">
            <summary>
            线性匀速过渡，无加速度。
            </summary>
        </member>
        <member name="M:EasyFramework.Tweening.Ease.InSine">
            <summary>
            使用正弦函数起始缓慢，逐渐加速。
            </summary>
        </member>
        <member name="M:EasyFramework.Tweening.Ease.OutSine">
            <summary>
            使用正弦函数起始快速，逐渐减速。
            </summary>
        </member>
        <member name="M:EasyFramework.Tweening.Ease.InOutSine">
            <summary>
            使用正弦函数在开始和结束时都较缓慢，中间加速。
            </summary>
        </member>
        <member name="M:EasyFramework.Tweening.Ease.InQuad">
            <summary>
            二次函数缓动，起始缓慢。
            </summary>
        </member>
        <member name="M:EasyFramework.Tweening.Ease.OutQuad">
            <summary>
            二次函数缓动，结束缓慢。
            </summary>
        </member>
        <member name="M:EasyFramework.Tweening.Ease.InOutQuad">
            <summary>
            二次函数缓动，开始和结束都缓慢，中间加速。
            </summary>
        </member>
        <member name="M:EasyFramework.Tweening.Ease.InCubic">
            <summary>
            三次函数缓动，起始缓慢。
            </summary>
        </member>
        <member name="M:EasyFramework.Tweening.Ease.OutCubic">
            <summary>
            三次函数缓动，结束缓慢。
            </summary>
        </member>
        <member name="M:EasyFramework.Tweening.Ease.InOutCubic">
            <summary>
            三次函数缓动，开始和结束都缓慢，中间加速。
            </summary>
        </member>
        <member name="M:EasyFramework.Tweening.Ease.InQuart">
            <summary>
            四次函数缓动，起始缓慢。
            </summary>
        </member>
        <member name="M:EasyFramework.Tweening.Ease.OutQuart">
            <summary>
            四次函数缓动，结束缓慢。
            </summary>
        </member>
        <member name="M:EasyFramework.Tweening.Ease.InOutQuart">
            <summary>
            四次函数缓动，开始和结束都缓慢，中间加速。
            </summary>
        </member>
        <member name="M:EasyFramework.Tweening.Ease.InQuint">
            <summary>
            五次函数缓动，起始缓慢。
            </summary>
        </member>
        <member name="M:EasyFramework.Tweening.Ease.OutQuint">
            <summary>
            五次函数缓动，结束缓慢。
            </summary>
        </member>
        <member name="M:EasyFramework.Tweening.Ease.InOutQuint">
            <summary>
            五次函数缓动，开始和结束都缓慢，中间加速。
            </summary>
        </member>
        <member name="M:EasyFramework.Tweening.Ease.InExponential(System.Single)">
            <summary>
            指数函数缓动，起始缓慢。
            </summary>
            <param name="power">指数次方</param>
        </member>
        <member name="M:EasyFramework.Tweening.Ease.OutExponential(System.Single)">
            <summary>
            指数函数缓动，结束缓慢。
            </summary>
            <param name="power">指数次方</param>
        </member>
        <member name="M:EasyFramework.Tweening.Ease.InOutExponential(System.Single)">
            <summary>
            指数函数缓动，开始和结束都缓慢，中间加速。
            </summary>
            <param name="power">指数次方</param>
        </member>
        <member name="M:EasyFramework.Tweening.Ease.InBack">
            <summary>
            向后拉动再向前加速的动画。
            </summary>
        </member>
        <member name="M:EasyFramework.Tweening.Ease.OutBack">
            <summary>
            向前滑动并超出目标后回弹的动画。
            </summary>
        </member>
        <member name="M:EasyFramework.Tweening.Ease.InOutBack">
            <summary>
            起始和终点都有回弹的动画。
            </summary>
        </member>
        <member name="M:EasyFramework.Tweening.Ease.InElastic">
            <summary>
            起始具有弹簧震荡效果，逐渐进入动画。
            </summary>
        </member>
        <member name="M:EasyFramework.Tweening.Ease.OutElastic">
            <summary>
            动画结束时产生弹簧震荡回弹效果。
            </summary>
        </member>
        <member name="M:EasyFramework.Tweening.Ease.InOutElastic">
            <summary>
            动画开始和结束都具有弹簧震荡效果。
            </summary>
        </member>
        <member name="M:EasyFramework.Tweening.Ease.InBounce">
            <summary>
            动画开始像球落地一样反弹，逐渐收敛。
            </summary>
        </member>
        <member name="M:EasyFramework.Tweening.Ease.OutBounce">
            <summary>
            动画结束像球落地一样反弹，逐渐停止。
            </summary>
        </member>
        <member name="M:EasyFramework.Tweening.Ease.InOutBounce">
            <summary>
            动画开始和结束都带有弹跳效果。
            </summary>
        </member>
        <member name="M:EasyFramework.Tweening.TweenerExtension.SetUnityObject(EasyFramework.Tweening.Tweener,UnityEngine.Object)">
            <summary>
            设置所属的unity对象，当对象销毁时也会停止该tweener
            </summary>
            <param name="tweener"></param>
            <param name="unityObject"></param>
            <returns></returns>
        </member>
        <member name="M:EasyFramework.Tweening.TweenerExtension.SetSpeedBased(EasyFramework.Tweening.Tweener,System.Boolean)">
            <summary>
            <para>速度模式，将“持续时间”的值变成“速度”，从“起始值”开始每秒增加“速度”直到“结束值”。</para>
            <para>注意：使用此模式后，Tween.Duration()将返回null，除非该Tweener的第一帧被调用了。</para>
            </summary>
        </member>
        <member name="M:EasyFramework.Tweening.Tween.Interval(System.Single)">
            <summary>
            创建一个指定持续时间的间隔
            </summary>
            <param name="duration">间隔时间（秒）</param>
            <returns>间隔Tween对象</returns>
        </member>
        <member name="M:EasyFramework.Tweening.Tween.Duration(EasyFramework.Tweening.AbstractTween)">
            <summary>
            <para>获取持续时间，返回null代表此时无法判断具体持续时间。</para>
            <para>如果是TweenSequence，只有运行完成了一次，才能确定那一次运行持续的时间，否则将始终返回null。</para>
            </summary>
            <param name="tween"></param>
            <returns></returns>
        </member>
        <member name="M:EasyFramework.Tweening.Tween.Duration(System.String)">
            <summary>
            <para>通过ID获取Tween的持续时间，返回null代表此时无法判断具体持续时间。</para>
            <para>如果是TweenSequence，只有运行完成了一次，才能确定那一次运行持续的时间，否则将始终返回null。</para>
            </summary>
            <param name="id">Tween的ID</param>
            <returns>如果找到对应的Tween则返回其持续时间，否则返回null</returns>
        </member>
        <member name="M:EasyFramework.Tweening.Tween.IsPlaying(System.String)">
            <summary>
            通过ID检查Tween是否正在播放
            </summary>
            <param name="id">Tween的ID</param>
            <returns>如果找到对应的Tween且正在播放则返回true，否则返回false</returns>
        </member>
        <member name="M:EasyFramework.Tweening.Tween.IsActive(System.String)">
            <summary>
            通过ID检查Tween是否处于活动状态
            </summary>
            <param name="id">Tween的ID</param>
            <returns>如果找到对应的Tween且处于活动状态则返回true，否则返回false</returns>
        </member>
        <member name="M:EasyFramework.Tweening.Tween.Kill(System.String)">
            <summary>
            通过ID终止Tween
            </summary>
            <param name="id">Tween的ID</param>
        </member>
        <member name="M:EasyFramework.Tweening.Tween.GetById(System.String)">
            <summary>
            通过ID获取Tween实例
            </summary>
            <param name="id">Tween的ID</param>
            <returns>如果找到则返回对应的Tween实例，否则返回null</returns>
        </member>
        <member name="F:EasyFramework.Tweening.LoopType.Restart">
            <summary>
            每次循环都从起点重新开始（从A到B，再从A到B，...）
            </summary>
        </member>
        <member name="F:EasyFramework.Tweening.LoopType.Yoyo">
            <summary>
            每次循环都会反转方向（A到B，再B到A，再A到B...）
            </summary>
        </member>
    </members>
</doc>
